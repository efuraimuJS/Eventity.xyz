{
    "message": "Request failed with status code 400",
    "name": "AxiosError",
    "stack": "AxiosError: Request failed with status code 400\n    at settle (webpack-internal:///./node_modules/axios/lib/core/settle.js:24:12)\n    at XMLHttpRequest.onloadend (webpack-internal:///./node_modules/axios/lib/adapters/xhr.js:117:66)",
    "config": {
        "transitional": {
            "silentJSONParsing": true,
            "forcedJSONParsing": true,
            "clarifyTimeoutError": false
        },
        "adapter": [
            "xhr",
            "http"
        ],
        "transformRequest": [
            null
        ],
        "transformResponse": [
            null
        ],
        "timeout": 0,
        "xsrfCookieName": "XSRF-TOKEN",
        "xsrfHeaderName": "X-XSRF-TOKEN",
        "maxContentLength": -1,
        "maxBodyLength": -1,
        "env": {},
        "headers": {
            "Accept": "application/json, text/plain, */*",
            "Content-Type": "application/json"
        },
        "method": "post",
        "url": "http://localhost:1337/api/auth/local/register",
        "data": "{\"username\":\"user_10\",\"email\":\"user_10@mail.com\",\"password\":\"user_10@mail.com\",\"passwordConfirm\":\"user_10@mail.com\"}"
    },
    "code": "ERR_BAD_REQUEST",
    "status": 400
}

[1]
[0]

{}

#__next > div > div > div

events_orders=${id}&total_price=${ticketTotal}&order_quantity=${ticketQuantity}&order_user=${globalUserId}


const createMutation = useMutation<{ data: any }, AxiosError, any, Response>(
    (): any => axios.post('/api/paypal/createOrder')
  )



{
  req: IncomingMessage {
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: [],
      flowing: null,
      ended: true,
      endEmitted: false,
      reading: false,
      constructed: true,
      sync: true,
      needReadable: false,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      errorEmitted: false,
      emitClose: true,
      autoDestroy: true,
      destroyed: false,
      errored: null,
      closed: false,
      closeEmitted: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: true,
      dataEmitted: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: null
    },
    _events: [Object: null prototype] {
      end: [Function (anonymous)],
      error: [Function (anonymous)]
    },
    _eventsCount: 2,
    _maxListeners: undefined,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 1165841,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      'localhost:3000',
      'Connection',
      'keep-alive',
      'Pragma',
      'no-cache',
      'Cache-Control',
      'no-cache',
      'sec-ch-ua',
      '"Google Chrome";v="111", "Not(A:Brand";v="8", "Chromium";v="111"',
      'sec-ch-ua-mobile',
      '?0',
      'sec-ch-ua-platform',
      '"Windows"',
      'Upgrade-Insecure-Requests',
      '1',
      'User-Agent',
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36',
      'Accept',
      'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'Sec-Fetch-Site',
      'same-origin',
      'Sec-Fetch-Mode',
      'navigate',
      'Sec-Fetch-Dest',
      'document',
      'Referer',
      'http://localhost:3000/events/megaclima-kenya-expo-2023',
      'Accept-Encoding',
      'gzip, deflate, br',
      'Accept-Language',
      'en-US,en;q=0.9',
      'Cookie',
      'wordpress_test_cookie=WP%20Cookie%20check; wordpress_logged_in_4426a4a02de10821d87ac13d63282fb1=wp_user%7C1678260562%7C6d9lmPUlNICBPS9PUVm12KqRCSVRzjWccQEVftJ6ko6%7C26a3402af5d443dec34559f0852417c61a34c757ba265168df0eb4689ae48f62; wordpress_logged_in_743590ba59234b9fc8eaaf393199b671=wp_user%7C1678268722%7CeIPcemXzS5OtEYVApPLPytw2Cmbh2CnAbd1GfCqJKba%7C1caf9be513a9950e175226181a239c0484937703b4b2194873f3efbdd609fa60; tk_ai=woo%3AF20yV7Bd0EACf9CwL6fDG%2Foz; woocommerce_items_in_cart=1; woocommerce_cart_hash=c3c8296db7525f595033ce7c391cd373; wp-settings-time-1=1678133694; next-auth.csrf-token=b062cc8c6c9a8362091979cea0906397744f55c9ed8faab656aaa8329cadd24c%7Cb568711879e5bbc9e01bee4bd85c6b9f9c41856be3b0751941fe2d699e012d73; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fsignin; arp_scroll_position=592.2222290039062; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..I6ZD7JkqNVGyOhuV.hzRGSso95YdnkdUqy7f_U3ipqcyqrDw50JDfquFLtMXsYrOKnBefpXzn9sG8rJku_hn8vBBLHtU8woq4YK9hVL7qi0NHpqcZyfqB3E3ARtwnlEqkS8V1gkJq8qxjTrZ4jdwTezQNdYJuTHS25QUJ05O3qnUyDpBkhVUVD6joqwxeRpOhnPzUhEao48zx2kIXgyB1T2Yk1lhs15GckRLn-jKjfb4k00acyHekecFWUtgxkWaHgcOVB7Fs0EjjBT4v8tqqQLr3RjyRpuAuKSLBReAuxP_YhSJVdPX_tDlmFVxo7ZNI6n9Fk30DiMhCJFKHNrNLNS0YUh9w9ShZIXDKrSMe4J9BZgpozkLCy89h.UzVY8QKY9w1ZrdInk7lwKA'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: undefined,
    aborted: false,
    upgrade: false,
    url: '/events/megaclima-kenya-expo-2023',
    method: 'GET',
    statusCode: null,
    statusMessage: null,
    client: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [ServerResponse],
      [Symbol(async_id_symbol)]: 1165841,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: false,
    _dumped: false,
    cookies: {
      wordpress_test_cookie: 'WP Cookie check',
      wordpress_logged_in_4426a4a02de10821d87ac13d63282fb1: 'wp_user|1678260562|6d9lmPUlNICBPS9PUVm12KqRCSVRzjWccQEVftJ6ko6|26a3402af5d443dec34559f0852417c61a34c757ba265168df0eb4689ae48f62',
      wordpress_logged_in_743590ba59234b9fc8eaaf393199b671: 'wp_user|1678268722|eIPcemXzS5OtEYVApPLPytw2Cmbh2CnAbd1GfCqJKba|1caf9be513a9950e175226181a239c0484937703b4b2194873f3efbdd609fa60',
      tk_ai: 'woo:F20yV7Bd0EACf9CwL6fDG/oz',
      woocommerce_items_in_cart: '1',
      woocommerce_cart_hash: 'c3c8296db7525f595033ce7c391cd373',
      'wp-settings-time-1': '1678133694',
      'next-auth.csrf-token': 'b062cc8c6c9a8362091979cea0906397744f55c9ed8faab656aaa8329cadd24c|b568711879e5bbc9e01bee4bd85c6b9f9c41856be3b0751941fe2d699e012d73',
      'next-auth.callback-url': 'http://localhost:3000/signin',
      arp_scroll_position: '592.2222290039062',
      'next-auth.session-token': 'eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..I6ZD7JkqNVGyOhuV.hzRGSso95YdnkdUqy7f_U3ipqcyqrDw50JDfquFLtMXsYrOKnBefpXzn9sG8rJku_hn8vBBLHtU8woq4YK9hVL7qi0NHpqcZyfqB3E3ARtwnlEqkS8V1gkJq8qxjTrZ4jdwTezQNdYJuTHS25QUJ05O3qnUyDpBkhVUVD6joqwxeRpOhnPzUhEao48zx2kIXgyB1T2Yk1lhs15GckRLn-jKjfb4k00acyHekecFWUtgxkWaHgcOVB7Fs0EjjBT4v8tqqQLr3RjyRpuAuKSLBReAuxP_YhSJVdPX_tDlmFVxo7ZNI6n9Fk30DiMhCJFKHNrNLNS0YUh9w9ShZIXDKrSMe4J9BZgpozkLCy89h.UzVY8QKY9w1ZrdInk7lwKA'
    },
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: 'localhost:3000',
      connection: 'keep-alive',
      pragma: 'no-cache',
      'cache-control': 'no-cache',
      'sec-ch-ua': '"Google Chrome";v="111", "Not(A:Brand";v="8", "Chromium";v="111"',
      'sec-ch-ua-mobile': '?0',
      'sec-ch-ua-platform': '"Windows"',
      'upgrade-insecure-requests': '1',
      'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36',
      accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
      'sec-fetch-site': 'same-origin',
      'sec-fetch-mode': 'navigate',
      'sec-fetch-dest': 'document',
      referer: 'http://localhost:3000/events/megaclima-kenya-expo-2023',
      'accept-encoding': 'gzip, deflate, br',
      'accept-language': 'en-US,en;q=0.9',
      cookie: 'wordpress_test_cookie=WP%20Cookie%20check; wordpress_logged_in_4426a4a02de10821d87ac13d63282fb1=wp_user%7C1678260562%7C6d9lmPUlNICBPS9PUVm12KqRCSVRzjWccQEVftJ6ko6%7C26a3402af5d443dec34559f0852417c61a34c757ba265168df0eb4689ae48f62; wordpress_logged_in_743590ba59234b9fc8eaaf393199b671=wp_user%7C1678268722%7CeIPcemXzS5OtEYVApPLPytw2Cmbh2CnAbd1GfCqJKba%7C1caf9be513a9950e175226181a239c0484937703b4b2194873f3efbdd609fa60; tk_ai=woo%3AF20yV7Bd0EACf9CwL6fDG%2Foz; woocommerce_items_in_cart=1; woocommerce_cart_hash=c3c8296db7525f595033ce7c391cd373; wp-settings-time-1=1678133694; next-auth.csrf-token=b062cc8c6c9a8362091979cea0906397744f55c9ed8faab656aaa8329cadd24c%7Cb568711879e5bbc9e01bee4bd85c6b9f9c41856be3b0751941fe2d699e012d73; next-auth.callback-url=http%3A%2F%2Flocalhost%3A3000%2Fsignin; arp_scroll_position=592.2222290039062; next-auth.session-token=eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0..I6ZD7JkqNVGyOhuV.hzRGSso95YdnkdUqy7f_U3ipqcyqrDw50JDfquFLtMXsYrOKnBefpXzn9sG8rJku_hn8vBBLHtU8woq4YK9hVL7qi0NHpqcZyfqB3E3ARtwnlEqkS8V1gkJq8qxjTrZ4jdwTezQNdYJuTHS25QUJ05O3qnUyDpBkhVUVD6joqwxeRpOhnPzUhEao48zx2kIXgyB1T2Yk1lhs15GckRLn-jKjfb4k00acyHekecFWUtgxkWaHgcOVB7Fs0EjjBT4v8tqqQLr3RjyRpuAuKSLBReAuxP_YhSJVdPX_tDlmFVxo7ZNI6n9Fk30DiMhCJFKHNrNLNS0YUh9w9ShZIXDKrSMe4J9BZgpozkLCy89h.UzVY8QKY9w1ZrdInk7lwKA'
    },
    [Symbol(kHeadersCount)]: 34,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0,
    [Symbol(NextRequestMeta)]: {
      __NEXT_INIT_URL: 'http://localhost:3000/events/megaclima-kenya-expo-2023',
      __NEXT_INIT_QUERY: {},
      _protocol: 'http',
      __NEXT_CLONABLE_BODY: [Object],
      __nextHadTrailingSlash: false,
      __nextIsLocaleDomain: false
    }
  },
  res: <ref *1> ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    _closed: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 1165841,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _keepAliveTimeout: 5000,
    _onPendingData: [Function: bound updateOutgoingData],
    req: IncomingMessage {
      _readableState: [ReadableState],
      _events: [Object: null prototype],
      _eventsCount: 2,
      _maxListeners: undefined,
      socket: [Socket],
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [Array],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '/events/megaclima-kenya-expo-2023',
      method: 'GET',
      statusCode: null,
      statusMessage: null,
      client: [Socket],
      _consuming: false,
      _dumped: false,
      cookies: [Object],
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: [Object],
      [Symbol(kHeadersCount)]: 34,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0,
      [Symbol(NextRequestMeta)]: [Object]
    },
    _sent100: false,
    _expect_continue: false,
    _maxRequestsPerSocket: 0,
    setHeader: [Function (anonymous)],
    statusCode: 200,
    flush: [Function: flush],
    write: [Function: write],
    end: [Function: end],
    on: [Function: on],
    writeHead: [Function: writeHead],
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kEndCalled)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: null,
    [Symbol(errored)]: null,
    [Symbol(kUniqueHeaders)]: null
  },
  query: { slug: 'megaclima-kenya-expo-2023' },
  resolvedUrl: '/events/megaclima-kenya-expo-2023',
  params: { slug: 'megaclima-kenya-expo-2023' },
  locales: undefined,
  locale: undefined,
  defaultLocale: undefined
}